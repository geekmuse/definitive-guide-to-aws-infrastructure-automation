AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  HasKeypair: !Not
    - !Equals
      - !Ref 'KeyName'
      - ''
Description: Creates EC2 security group and instance
Mappings:
  AmiByOs:
    us-east-1:
      AmazonLinux2: ami-0c6b1d09930fac512
      Windows2016Base: ami-06bee8e1000e44ca4
    us-west-2:
      AmazonLinux2: ami-0cb72367e98845d43
      Windows2016Base: ami-07f35a597a32e470d
  Global:
    ConnectPortByOs:
      AmazonLinux2: 22
      Windows2016Base: 3389
Outputs:
  AZ:
    Description: AZ of the EC2 instance
    Value: !GetAtt 'Ec2Instance.AvailabilityZone'
  InstanceId:
    Description: InstanceId of the EC2 instance
    Value: !Ref 'Ec2Instance'
  PublicDNS:
    Description: Public DNSName of the EC2 instance
    Value: !GetAtt 'Ec2Instance.PublicDnsName'
  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt 'Ec2Instance.PublicIp'
Parameters:
  InstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - m4.large
      - m4.xlarge
    Default: t2.small
    Description: EC2 instance type
    Type: String
  KeyName:
    ConstraintDescription: must be a string
    Default: ''
    Description: Name of an existing EC2 KeyPair to enable access to the instance
    Type: String
  OperatingSystem:
    AllowedValues:
      - AmazonLinux2
      - Windows2016Base
    Default: AmazonLinux2
    Description: Chosen operating system
    Type: String
  PublicLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x
    Default: '0.0.0.0/0'
    Description: The IP address range that can be used to connect to the EC2 instances
    MaxLength: 18
    MinLength: 9
    Type: String
Resources:
  Ec2Instance:
    Properties:
      ImageId: !FindInMap
        - AmiByOs
        - !Ref 'AWS::Region'
        - !Ref 'OperatingSystem'
      InstanceType: !Ref 'InstanceType'
      KeyName: !If
        - HasKeypair
        - !Ref 'KeyName'
        - !Ref 'AWS::NoValue'
      SecurityGroups:
        - !Ref 'InstanceSg'
    Type: AWS::EC2::Instance
  InstanceSg:
    Properties:
      GroupDescription: Enable SSH and HTTP access on the inbound port
      SecurityGroupIngress:
        - CidrIp: !Ref 'PublicLocation'
          FromPort: !FindInMap
            - Global
            - ConnectPortByOs
            - !Ref 'OperatingSystem'
          IpProtocol: tcp
          ToPort: !FindInMap
            - Global
            - ConnectPortByOs
            - !Ref 'OperatingSystem'
    Type: AWS::EC2::SecurityGroup

